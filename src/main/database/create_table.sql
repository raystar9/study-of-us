-- Member테이블 INDEX의 시퀀스
CREATE SEQUENCE member_index
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

-- Member 테이블 생성
CREATE TABLE Member(
	M_INDEX NUMBER NOT NULL PRIMARY KEY,      -- member_index 시퀀스 처리
	M_ID VARCHAR(16) NOT NULL,
	M_PASSWORD VARCHAR(16) NOT NULL,
	M_NAME VARCHAR(15) NOT NULL,
	M_EMAIL VARCHAR(50) NOT NULL,
	M_TEL NUMBER NOT NULL,
	M_ADDRESS VARCHAR(200),
	M_GENDER VARCHAR(2) NOT NULL,
	M_INTRODUCE VARCHAR(200) NOT NULL
)

ALTER SEQUENCE member_index INCREMENT BY 1;   -- 시퀀스의 값을 1로 바꿔줌.

SELECT M_INDEX, M_ID, M_PASSWORD, M_NAME, M_EMAIL, M_TEL, M_ADDRESS, M_GENDER, M_INTRODUCE FROM Member;
INSERT INTO Member(M_INDEX, M_ID, M_PASSWORD, M_NAME, M_EMAIL, M_TEL, M_ADDRESS, M_GENDER, M_INTRODUCE)
	VALUES (member_index.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?);
UPDATE Member SET M_ID=?, M_PASSWORD=?, M_NAME=?, M_EMAIL=?, M_TEL=?, M_ADDRESS=?, M_GENDER=?, M_INTRODUCE=? 
	WHERE M_INDEX=?;
DELETE FROM Member WHERE M_INDEX = ?;



-- Study 테이블 생성
CREATE TABLE Study(
	S_INDEX NUMBER NOT NULL PRIMARY KEY,      -- study_index 시퀀스 처리
	S_NAME VARCHAR(16) NOT NULL,         
	S_C_ID NUMBER NOT NULL,              -- CATEGORY.C_ID 외래키 지정 해줘야 함.
	S_PLACE VARCHAR(50) NOT NULL,             -- 수정 요망.
	S_TIME DATE NOT NULL,
	S_PLOPIENUM NUMBER NOT NULL,
	S_GOAL VARCHAR(100) NOT NULL,             -- 추가 조정(테이블 따로 뺄것인지?)
	S_TERM DATE NOT NULL
)

ALTER TABLE Study ADD(S_START DATE);
ALTER TABLE Study ADD(S_END DATE);
ALTER TABLE Study ADD(S_NUMPERSON NUMBER);
ALTER TABLE Study ADD(S_ACTIVITYTIME DATE);
ALTER TABLE Study ADD(S_DAY DATE);

-- Study 테이블 INDEX의 시퀀스
CREATE SEQUENCE study_index
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

ALTER TABLE Study MODIFY(S_C_ID NUMBER);
ALTER TABLE Study ADD FOREIGN KEY(S_C_ID) REFERENCES Category(C_ID); -- 외래키 지정.

SELECT S_INDEX, S_NAME, S_C_ID, S_PLACE, S_TIME, S_PLOPIENUM, S_GOAL, S_TERM, S_START, S_END, S_NUMPERSON, S_ACTIVITYTIME, S_DAY FROM Study;
INSERT INTO Study(S_INDEX, S_NAME, S_C_ID, S_PLACE, S_TIME, S_PLOPIENUM, S_GOAL, S_TERM, S_START, S_END, S_NUMPERSON, S_ACTIVITYTIME, S_DAY)
	VALUES (study_index.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
UPDATE Study SET S_NAME=?, S_C_ID=?, S_PLACE=?, S_TIME=?, S_PLOPIENUM=?, S_GOAL=?, S_TERM=?, S_START=?, S_END=?, S_NUMPERSON=?, S_ACTIVITYTIME=?, S_DAY=?
	WHERE S_INDEX=?;
DELETE FROM Study WHERE S_INDEX = ?;




-- Category 테이블 생성 (스터디 분야에 대한 정보)
CREATE TABLE Category(
	C_ID NUMBER NOT NULL PRIMARY KEY,        -- Study테이블에 외래키로 사용됨.
	C_GROUP VARCHAR(20) NOT NULL,            -- 대분류
	C_SUB VARCHAR(20) NOT NULL               -- 소분류
)

SELECT C_ID, C_GROUP, C_SUB FROM Category;
INSERT INTO Category(C_ID, C_GROUP, C_SUB) VALUES (?, ?, ?);
UPDATE Category SET C_GROUP=?, C_SUB=? WHERE C_ID=?;
DELETE FROM Category WHERE C_ID=?;




-- Interesting 테이블 생성(회원별 관심사)
CREATE TABLE Interesting(
	I_M_INDEX NUMBER NOT NULL,
	I_C_ID NUMBER NOT NULL,
	PRIMARY KEY(I_M_INDEX, I_C_ID)           -- 다중 PRIMARY KEY 지정.
)

ALTER TABLE Interesting ADD FOREIGN KEY(I_M_INDEX) REFERENCES Member(M_INDEX);
ALTER TABLE Interesting ADD FOREIGN KEY(I_C_ID) REFERENCES Category(C_ID);

SELECT I_M_INDEX, I_C_ID FROM Interesting;
INSERT INTO Interesting(I_M_INDEX, I_C_ID) VALUES (?, ?);
UPDATE Interesting SET I_M_INDEX, I_C_ID WHERE I_M_INDEX=? AND I_C_ID=?;
DELETE FROM Interesting WHERE I_M_INDEX=? AND I_C_ID=?;




-- PreferenceArea 테이블 생성(회원의 선호지역)
CREATE TABLE PreferenceArea(
	P_M_INDEX NUMBER NOT NULL,
	P_AREA VARCHAR(30) NOT NULL,
	PRIMARY KEY(P_M_INDEX, P_AREA)
)

ALTER TABLE PreferenceArea ADD FOREIGN KEY(P_M_INDEX) REFERENCES Member(M_INDEX);

SELECT P_M_INDEX, P_AREA FROM PreferenceArea;
INSERT INTO PreferenceArea(P_M_INDEX, P_AREA) VALUES (?, ?);
UPDATE PreferenceArea SET P_AREA=? WHERE P_M_INDEX=?;
DELETE FROM PreferenceArea WHERE P_M_INDEX=?;



-- StudyList 테이블 생성(스터디의 명단 정보)
CREATE TABLE StudyList(
	SL_S_INDEX NUMBER NOT NULL,
	SL_M_INDEX NUMBER NOT NULL,
	PRIMARY KEY(SL_S_INDEX, SL_M_INDEX)
)

ALTER TABLE StudyList ADD FOREIGN KEY(SL_S_INDEX) REFERENCES Study(S_INDEX); 
ALTER TABLE StudyList ADD FOREIGN KEY(SL_M_INDEX) REFERENCES Member(M_INDEX); 

SELECT SL_S_INDEX, SL_M_INDEX FROM StudyList;
INSERT INTO StudyList(SL_S_INDEX, SL_M_INDEX) VALUES (?, ?);
UPDATE StudyList SET SL_S_INDEX=?, SL_M_INDEX=? WHERE SL_S_INDEX=? AND SL_M_INDEX=?;
DELETE FROM StudyList WHERE SL_S_INDEX=? AND SL_M_INDEX=?;



-- Board 테이블 생성(게시판 정보)
CREATE TABLE Board(
	B_NO NUMBER NOT NULL PRIMARY KEY,
	B_M_INDEX NUMBER NOT NULL,
	B_TITLE VARCHAR(100) NOT NULL,
	B_DATE VARCHAR(10) NOT NULL,
	B_CONTENT VARCHAR(300) NOT NULL               -- CLOE처리 할수도..
)

-- Board 테이블 NO의 시퀀스
CREATE SEQUENCE board_no
START WITH 1
INCREMENT BY 1
NOMAXVALUE;


ALTER TABLE Board ADD FOREIGN KEY(B_M_INDEX) REFERENCES Member(M_INDEX); 

SELECT B_NO, B_M_INDEX, B_TITLE, B_DATE, B_CONTENT FROM Board;
INSERT INTO Board(B_NO, B_M_INDEX, B_TITLE, B_DATE, B_CONTENT) VALUES (board_no.NEXTVAL, ?, ?, ?, ?);
UPDATE Board SET B_M_INDEX=?, B_TITLE=?, B_DATE=?, B_CONTENT=? WHERE B_NO=?;
DELETE FROM Board WHERE B_NO=?;



-- Notice 테이블 생성(스터디 내에 공지사항 정보)
CREATE TABLE Notice(
	N_S_INDEX NUMBER NOT NULL PRIMARY KEY,
	N_CONTENT VARCHAR(300) NOT NULL              -- CLOE처리 할수도
)

ALTER TABLE Notice ADD FOREIGN KEY(N_S_INDEX) REFERENCES Study(S_INDEX);

SELECT N_S_INDEX, N_CONTENT FROM Notice;
INSERT INTO Notice(N_S_INDEX, N_CONTENT) VALUES (?, ?);
UPDATE Notice SET N_S_INDEX=?, N_CONTENT=? WHERE N_S_INDEX=?;
DELETE FROM Notice WHERE N_S_INDEX=?;