public ArrayList<Study> getStudies(int index) {
		@SuppressWarnings("unchecked")
		ArrayList<Study> list = (ArrayList<Study>) get(Study.QUERY_GET4,new DataSettable() {
			
			@Override
			public void prepare(PreparedStatement pstmt) throws SQLException {
	
				pstmt.setInt(1, index);

			}
		}, new DataGettable() {

			@Override
			public ArrayList<?> onGetResult(ResultSet rs) throws SQLException {
				ArrayList<Study> studies = new ArrayList<>();
				while(rs.next()) {
					Study study = new Study();
					study.setIndex(rs.getInt(1));
					study.setName(rs.getString(2));
					study.setC_id(rs.getInt(3));
					study.setMt_index(rs.getInt(4));
					study.setStart(rs.getDate(5));
					study.setEnd(rs.getDate(6));
					study.setPeoplenum(rs.getInt(7));
					study.setDay(rs.getString(8));
					study.setTime(rs.getString(9));
					study.setExplain(rs.getString(10));
					study.setPrepared(rs.getString(11));
					study.setEffective(rs.getString(12));
					study.setPlace(rs.getString(13));

					studies.add(study);
				}
				return studies;
			}
		});

		// TODO Auto-generated method stub
		return list;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public Login getIdCheck(String id) {
		Login login = (Login) get(Login.QUERY_GET2, new DataSettable() {

			@Override
			public void prepare(PreparedStatement pstmt) throws SQLException {
				// 바인딩변수채워주고
				pstmt.setString(1, id);
			}
		}, new DataGettable() {

			@Override
			public Object onGetResult(ResultSet rs) throws SQLException {
				Login idck = null;
				if (rs.next()) {
					// 값이있다면 인스턴스변수 참조해서 값을 넣어준다
					idck = new Login();
					idck.setId(rs.getString(1));
				}

				return idck;
			}
		});
		return login;
	}
	